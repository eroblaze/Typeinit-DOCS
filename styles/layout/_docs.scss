@use "../abstracts/functions" as f;
@use "../abstracts/breakpoints" as b;

ul,
ol {
  list-style: inside;
}

/* shared styles*/

%iconwithtext {
  display: flex;
  gap: f.rem(10);
  align-items: center;
  list-style: none;
  transition: 150ms color linear;

  &:hover {
    color: var(--white);
  }

  > svg {
    transform: rotate(-90deg);
    transition: 150ms transform;
    path {
      fill: currentColor;
    }
  }
}

.rotate-arrow {
  transform: rotate(0deg) !important;
}

/* end shared styles*/

.docs {
  // border: 1px solid red;

  // This is the details section of the doc
  > section {
    padding-inline-end: var(--body-padding);

    @include b.breakpoint(#{f.rem(1025)}) {
      padding-inline-end: 0;
    }

    @include b.breakpoint(md, max-width) {
      padding: f.rem(20) var(--body-padding);
    }
    ::marker {
      color: var(--primary);
    }
  }

  pre {
    box-shadow: none;
    margin-block: f.rem(20) !important;
  }

  code:not([class^="language-"]) {
    display: inline-block;
    font-size: 1rem;
    border-radius: f.rem(2);
    background-color: var(--dark-grey);
    padding-inline: f.rem(3);
    // transform: translateY(-2px);
  }

  &__title {
    color: var(--white);
    margin-bottom: f.rem(20);
    @include b.breakpoint(md) {
      margin-bottom: f.rem(30);
    }
  }

  &__subtitle {
    margin-block: f.rem(20);
    @include b.breakpoint(md) {
      margin-block: f.rem(30);
    }
  }

  &__ultra__subtitle {
    display: inline-block;
    font-weight: 600;

    margin-block: f.rem(20);
    @include b.breakpoint(md) {
      margin-block: f.rem(30);
    }
  }

  @include b.breakpoint(#{f.rem(1024)}, max-width) {
    padding-inline: 0;
  }

  @include b.breakpoint(md) {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: f.rem(30);

    > * {
      padding-block-start: f.rem(44);
    }
  }
}

.sticky__sidenav {
  position: sticky;
  top: calc(var(--header-height) + 1px);

  @include b.breakpoint(md) {
    height: calc(100vh - var(--header-height));
    padding-block-start: f.rem(50);
    // outline: 1px solid red;
  }
}

.sticky__sidenav.open {
  > .sidenav {
    display: block !important;
  }
}

.sidenav {
  --spacing: #{f.rem(5)};
  --gap: #{f.rem(15)};

  color: var(--grey);

  font-size: f.rem(16);

  // border: 1px solid red;
  padding-inline: var(--body-padding);

  overflow-y: auto;

  @include b.breakpoint(#{f.rem(1025)}) {
    padding-inline: 0;
  }
  @include b.breakpoint(md) {
    padding-bottom: f.rem(16);
    height: calc(100vh - var(--header-height));
    scrollbar-gutter: stable;
  }

  @include b.breakpoint(md, max-width) {
    display: none;
    position: absolute;
    top: 100%;
    right: 0;
    left: 0;
    bottom: calc(140.39px - 100vh);
    padding-block-start: f.rem(30);
    z-index: 10000;
    background: var(--bg-dark);
  }

  li {
    cursor: pointer;
    transition: 150ms color linear;
  }

  li:hover {
    color: var(--white);
  }

  li:not(:last-child) {
    margin-bottom: var(--gap);
  }

  &__menu {
    display: flex;
    flex-direction: column;
    gap: var(--gap);
  }

  &__space {
    padding-left: var(--spacing);
  }

  details {
    > summary {
      @extend %iconwithtext;
    }

    &[open] {
      > summary > svg {
        @extend .rotate-arrow;
      }
    }
    & > nav {
      width: fit-content;
      border-left: 1px solid var(--grey);
      padding-left: calc(#{f.rem(17)} + var(--spacing));
      transform: translateX(5px);
      margin: f.rem(19) 0 var(--gap) 0;
    }
  }
}

.sidenav__mobile__menu {
  @include b.breakpoint(md) {
    display: none;
  }

  @extend %iconwithtext;

  background: var(--bg-dark);
  color: var(--grey);
  // border: 1px solid red;
  gap: f.rem(15);
  padding: f.rem(20) var(--body-padding);
  border-bottom: 1px solid var(--dark-grey);
}
